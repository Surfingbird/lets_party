swagger: "2.0"
info:
  description: "Это документация к API сервиса [service_name]"
  version: "1.0.0"
  title: "[service_name]"
  # termsOfService: "http://swagger.io/terms/"
  # contact:
  #   email: "apiteam@swagger.io"
  # license:
  #   name: "Apache 2.0"
  #   url: "http://www.apache.org/licenses/LICENSE-2.0.html"
# host: "petstore.swagger.io"
# basePath: "/v2"
tags:
- name: "products"
  description: "Все, что связано с событиями"
  externalDocs:
    # description: "Find out more"
    # url: "http://swagger.io"

- name: "profile"
  description: "Все, что связано с профилями"

# - name: "user"
#   description: "Operations about user"

#   externalDocs:
#     description: "Find out more about our store"
#     url: "http://swagger.io"

schemes:
# - "https"
- "http"

paths:
  /products:
    get:
      tags:
      - "products"
      summary: "Получить список новых товаров"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"

  /products/[slug]:
    get:
      tags:
      - "products"
      summary: "Получить информацию о товаре"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"

  /products/popular:
    get:
      tags:
      - "products"
      summary: "Получить список популярных товаров"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"

  /products/search:
    get:
      tags:
      - "products"
      summary: "Установление ws соединения для интерактивного поиска"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      responses:

  /products/search/[pattern]:
    get:
      tags:
      - "products"
      summary: "Получения товаров подходящих под паттерн поиска"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"

  /profile/mypage:
    get:
      tags:
      - "profile"
      summary: ""
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"


  /profile/mypage/wishes:
    get:
      tags:
      - "profile"
      summary: "Список моих пожеланий"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"

    post:
      tags:
      - "profile"
      summary: "Добавить товар в список желаний"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"

    delete:
      tags:
      - "profile"
      summary: "Убрать товар из списка желаний"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"

  /profile/mypage/intentions:
    get:
      tags:
      - "profile"
      summary: "Список того, что я хочу подарить"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"

    post:
      tags:
      - "profile"
      summary: "Добавить намерение подарить товар"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"

    delete:
      tags:
      - "profile"
      summary: "Отказаться дарить товар"
      description: ""
      # operationId: "addPet"
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"

  /profile/[id_or_name]/wishes:
    get:
      tags:
      - "profile"
      summary: "Список поджеланий пользователя"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"

  /profile/[id_or_name]/intentions:
    get:
      tags:
      - "profile"
      summary: "Список того, что мы хотим подарить пользователю"
      description: ""
      # operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      # - in: "body"
      #   name: "body"
      #   description: "Pet object that needs to be added to the store"
      #   required: true
      #   schema:
      #     $ref: "#/definitions/Pet"
      responses:
      #   405:
      #     description: "Invalid input"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"
 

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:
  Product:
    type: "object"
    properties:
      id:
        type: "string"

      product_name:
        type: "string"

      discription:
        type: "string"

      price:
        type: "float"
        format: "float32"
        
      img_url:
        type: "string"
        format: "URL"

      product_url:
        type: "string"
        format: "URL"

    # xml:
    #   name: "Order"

  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"